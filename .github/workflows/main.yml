name: Release to github using @electron-delta/builder

on:
  push:
    branches: [ci-test]
  workflow_dispatch:

jobs:
  # release-mac:
  #   if: "!contains(github.event.head_commit.message, 'skip ci')"
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         persist-credentials: false
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: "16"
  #         architecture: "x64"
  #     - name: npm install
  #       run: npm ci
  #     - name: configure git
  #       run: |
  #         git config user.name github-actions
  #         git config user.email github-actions@github.com
  #         npm version patch
  #         git commit -m "release [skip ci]" --amend
  #     - name: electron builder build and publish
  #       run: npm run release:mac
  #       env:
  #         GH_TOKEN: ${{ secrets.GH_TOKEN }}
  #         CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
  #         CSC_LINK: ${{ secrets.CSC_LINK }}
  #     - name: Push changes
  #       uses: ad-m/github-push-action@master
  #       with:
  #         github_token: ${{ secrets.GH_TOKEN }}
  #         branch: ${{ github.ref }}
  release-win: 
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
          architecture: "x64"
      - name: yarn install
        run: yarn install --frozen-lockfile
      - name: configure git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: electron builder build and publish
        run: yarn release:win
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
